--
--  anylike
--
--  anylike is an IKEv2 Implementation written in Lua and C. It's main 
--  design goal is to provide anytun and uanytun or any other SATP 
--  implementation with a key exchange mechanism but it should also be 
--  possible to use anylike as key exchange daemon for IPSec security 
--  associations. The use of Lua guarantees that anylike is easily 
--  portable to many platforms including very small ones like wireless 
--  routers.
--  
--
--  Copyright (C) 2007-2008 Markus Grueneis <gimpf@anylike.org>
--                          Christian Pointner <equinox@anylike.org>
--
--  This file is part of anylike.
--
--  anylike is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  any later version.
--
--  anylike is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with anylike. If not, see <http://www.gnu.org/licenses/>.
--
--
-- the following is inspired by BinTwoCee from the lua-users wiki.
-- http://lua-users.org/wiki/BinToCee
--

if not arg or not arg[1] or not arg[2] then
  io.stderr:write("Usage: lua bin2c.lua filename c_var_name\n")
  return
end

local filename, c_var_name = ...

local content = assert(io.open(filename,"rb")):read"*a"

local dump do
  local numtab={}; for i=0,255 do numtab[string.char(i)]=("%3d,"):format(i) end
  function dump(str)
    return (str:gsub(".", numtab):gsub(("."):rep(80), "%0\n"))
  end
end

io.write([=[
/* code automatically generated by bin2c -- DO NOT EDIT */

static const char ]=] , c_var_name, [=[[]={
]=], dump(content), [=[

};
]=])
