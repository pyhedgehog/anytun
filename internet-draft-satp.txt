


Network Working Group                                         O. Gsenger
Internet-Draft                                                March 2007
Expires: September 2, 2007


                secure anycast tunneling protocol (satp)
           draft-gsenger-secure-anycast-tunneling-protocol-00

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 2, 2007.

Copyright Notice

   Copyright (C) The IETF Trust (2007).















Gsenger                 Expires September 2, 2007               [Page 1]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


Abstract

   The secure anycast tunneling protocol (satp) defines a protocol used
   for communication between any combination of unicast and anycast
   tunnel endpoints.  It has less protocol overhead than IPSec in Tunnel
   mode and allows tunneling of every ETHER TYPE protocol (e.g.
   ethernet, ip, arp ...). satp directly includes cryptography and
   message authentication based on the methodes used by SRTP.  It is
   intended to deliver a generic, scaleable and secure solution for
   tunneling and relaying of packets of any protocol.









































Gsenger                 Expires September 2, 2007               [Page 2]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


1.  Introduction

   SATP is somehow a mixture of an generic encapsulation protocol as GRE
   [1] and a secure tunneling protocol as IPsec [2] in tunnel mode.  To
   save some header overhead it uses the encryption technices of SRTP
   [3].  It supports peer to peer tunnels, where tunnel endpoints CAN be
   any combination of unicast, multicast or anycast hosts, so it defines
   a Host Anycast Service as defined in rfc1546 [4]











































Gsenger                 Expires September 2, 2007               [Page 3]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


2.  Motivation and usage scenarios

   This section gives an overview of possible usage scenarios.  Please
   note, that the protocols used in the figures are only examples and
   that SATP itself does not care about either transport protocols or
   encapsulated protocols.  Routing is not done by SATP and each
   implemetation MAY choose it's own way of doing this task (e.g. using
   functions provided by the operating system).  SATP is used only to
   encapsulate and encrypt data.

2.1.  Usage scenarions

2.1.1.  tunneling from unicast hosts over anycast routers to other
        unicast hosts

   An example of SATP used to tunnel in a unicast client - anycast
   server model

                       --------- router -----------
                      /                            \
       unicast ------+---------- router ------------+------ unicast
       host           \                            /        host
                       --------- router -----------

     unicast  | encrypted     |  anycast  | encrypted     |  unicast
     tunnel   | communication |  tunnel   | communication |  tunnel
     endpoint | using SATP    |  endpoint | using SATP    |  endpoint

                                 Figure 1

   In this scenario the payload of a SATP packet is transmitted from one
   unicast host to one of the anycast routers.  This router makes a
   routing descision based on the underlying protocol and transmits a
   new SATP package to one or more unicast hosts depending on the
   routing descition.
















Gsenger                 Expires September 2, 2007               [Page 4]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


2.1.2.  tunneling from unicast hosts to anycast networks

   An example of SATP used to encrypt data between a unicast host and
   anycast networks

                          -------Router -+---- DNS Server
                         /                \
                        /                  --- 6to4 Router
                       /
       unicast -------+----------Router --+--- DNS Server
       host            \                   \
                        \                   --- 6to4 Router
                         \
                          -------Router -+---- DNS Server
                                          \
                                           --- 6to4 Router

     unicast  | encrypted     |  anycast  | plaintext
     tunnel   | communication |  tunnel   | anycast
     endpoint | using SATP    |  endpoint | services


                                 Figure 2

2.1.3.  redundant tunnel connection of 2 networks

   An example of SATP used to connect 2 networks

                 Router -----------   ---------------Router
               /                   \ /                     \
       Network - Router ------------x                       Network
          A    \                   / \                     /   B
                 Router -----------   ---------------Router

               | packets       |  packets  |  packets      |
    plaintext  | get           |  take a   |  get          | plaintext
    packets    | de/encrypted  |  random   |  de/encrypted | packets
               |de/encapsulated|   path    |de/encapsulated|


                                 Figure 3

   Network A has multible routers, that act as gateway/tunnel endpoint
   to another network B. This is done to build e redundant encrpted
   tunnel connection between the to networks.  All tunnel endpoints of
   network A share the same anycast address and all tunnel endpoints of
   network B share another anycast address.




Gsenger                 Expires September 2, 2007               [Page 5]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


2.2.  Encapsulation

   SATP does not depend an which lower layer protocols is used, but it's
   most likely used on top of ip or udp.  This section should only
   discuss some issues on ip and udp in combination with anycasting and
   tunnels.

   Examples of SATP used with different lower layer and payload
   protocols

       +------+-----+-------------------------------+
       |      |     |      + ---------------+------ |
       | IPv6 | UDP | SATP | Ethernet 802.3 | ... | |
       |      |     |      +----------------+-----+ |
       +------+-----+-------------------------------+

   Tunnelung of Ethernet over UDP/IPv6

       +------+-----+---------------------------+
       |      |     |      +------+-----+-----+ |
       | IPv4 | UDP | SATP | IPv6 | UDP | RTP | |
       |      |     |      +------+-----+-----+ |
       +------+-----+---------------------------+

   Tunneling of IPv6 over UDP/IPv4 with RTP payload

       +------+-------------------------------+
       |      |      + ---------------+------ |
       | IPv6 | SATP | Ethernet 802.3 | ... | |
       |      |      +----------------+-----+ |
       +------+-------------------------------+

   Tunnelung of Ethernet over IPv6

       +------+---------------------------+
       |      |      +------+-----+-----+ |
       | IPv4 | SATP | IPv6 | UDP | RTP | |
       |      |      +------+-----+-----+ |
       +------+---------------------------+

   Tunneling of IPv6 over IPv4 with RTP payload

                                 Figure 4

   When using UDP no flow controll or retransmission is done, neigther
   by UDP nor anytun.  The encapsulated protocol HAS TO take care of
   this tasks if needed.  UDP however has a checksum of the complete udp
   datagram, so a packet gets discarded if there is a biterror in the



Gsenger                 Expires September 2, 2007               [Page 6]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


   payload

2.3.  Fragmentation

   The only way of fully supporting fragmentation would be to syncronise
   fragments between all anycast servers.  This is considered to be to
   much overhead, so there are two non perfect solutions for this
   problems.  Either fragmentation HAS TO be disabled or if not all
   fragments arrive at the same server the ip datagramm HAS TO be
   discarded.  As routing changes are not expected to occure very
   frequently, the encapsulated protocol can do a retransmission and all
   fragments will arrive at the new server.







































Gsenger                 Expires September 2, 2007               [Page 7]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


3.  Protocol specification

3.1.  Header format

   Protocol Format

        0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           sender ID           |         sequence number       | |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
   | |              ....        payload        ...                   | |
   | |-------------------------------+-------------------------------+ |
   | | padding (OPT) | pad count(OPT)|         payload type          | |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | ~                          MKI (OPTIONAL)                       ~ |
   | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
   | :                 authentication tag (RECOMMENDED)              : |
   | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
   |                                                                   |
   +- Encrypted Portion*                      Authenticated Portion ---+

                                 Figure 5

3.2.  sender ID

   The sender ID is a 16bit unsigned integer in network byte order.  It
   HAS TO be unique for every sender sharing the same anycast address

3.3.  sequence number

   The sequenze number is a 16bit unsigned integer in network byte
   order.  It starts with a random value and is increased by 1 for every
   sent packet.  After the maximum value, it starts over from 0.  This
   overrun causes the ROC to be increased.

3.4.  payload

   A packet of the type payload type (e.g. an IP packet).

3.5.  padding (OPTINAL)

   Padding of max 255 ocitets.  None of the pre-defined encryption
   transforms uses any padding; for these, the plaintext and encrypted
   payload sizes match exactly.  Transforms are based on transforms of
   the SRTP protocol and these transforms might use the RTP padding
   format, so a RTP like padding is supported.  If padding field is



Gsenger                 Expires September 2, 2007               [Page 8]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


   present, than the padding count field MUST be set to the padding
   lenght.

3.6.  padding count

   The number of octets of the padding field.  This field is optional.
   It's presents is signaled by the key management and not by this
   protocol.  If this field isn't present, the padding field MUST NOT be
   present as well.

3.7.  payload type field

   The payload type field defines the payload protocol.  ETHER TYPE
   protocol numerbers are used.
   http://www.iana.org/assignments/ethernet-numbers .  The values 0000-
   05DC are reserverd and MUST NOT be used.

   Some examples for protocol types

   HEX
   0000 Reserved
   .... Reserved
   05DC Reserved
   0800 Internet IP (IPv4)
   6558 transparent ethernet bridging
   86DD IPv6

                                 Figure 6























Gsenger                 Expires September 2, 2007               [Page 9]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


Appendix A.  The appan


















































Gsenger                 Expires September 2, 2007              [Page 10]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


4.  References

   [1]  Farinacci, D., Li, T., Hanks, S., Meyer, D., and P. Traina,
        "Generic Routing Encapsulation (GRE)", RFC 2784, March 2000.

   [2]  Kent, S. and R. Atkinson, "Security Architecture for the
        Internet Protocol", RFC 2401, November 1998.

   [3]  Huitema, C., "An Anycast Prefix for 6to4 Relay Routers",
        RFC 3068, June 2001.

   [4]  Partridge, C., Mendez, T., and W. Milliken, "Host Anycasting
        Service", RFC 1546, November 1993.






































Gsenger                 Expires September 2, 2007              [Page 11]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


Author's Address

   Othmar Gsenger
   Sporgasse 6
   Graz  8010
   AT

   Phone:
   Email: otti@wirdorange.org
   URI:   http://anytun.org/









































Gsenger                 Expires September 2, 2007              [Page 12]

Internet-Draft  secure anycast tunneling protocol (satp)      March 2007


Full Copyright Statement

   Copyright (C) The IETF Trust (2007).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Gsenger                 Expires September 2, 2007              [Page 13]

